{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","onSubmit","preventDefault","id","Math","floor","random","text","className","type","name","placeholder","onChange","ref","Todo","todos","completeTodo","updateTodo","deleteTodo","setEdit","map","todo","index","isComplete","onClick","TodoList","setTodos","localStorage","getItem","setItem","localStorageTodo","JSON","parse","stringify","newTodos","updatedTodos","filter","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0LA2DeA,MAzDf,SAAkBC,GAAQ,IAAD,EACGC,mBAASD,EAAME,KAAOF,EAAME,KAAKC,MAAQ,IAD5C,mBAChBC,EADgB,KACTC,EADS,KAGjBC,EAAWC,iBAAO,MAExBC,qBAAU,WACRF,EAASG,QAAQC,WAGnB,IAAMC,EAAe,SAACC,GACpBP,EAASO,EAAEC,OAAOV,QAcpB,OACE,sBAAMW,SAZa,SAACF,GACpBA,EAAEG,iBAEFf,EAAMc,SAAS,CACbE,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMhB,IAGRC,EAAS,KAIqBgB,UAAU,OAAxC,SACIrB,EAAME,KAcN,qCACE,uBACEoB,KAAK,OACLC,KAAK,OACLC,YAAY,gBACZrB,MAAOC,EACPqB,SAAUd,EACVe,IAAKpB,EACLe,UAAU,eAEZ,wBAAQA,UAAU,WAAlB,uBAvBF,qCACE,uBACEC,KAAK,OACLC,KAAK,OACLC,YAAY,aACZrB,MAAOC,EACPqB,SAAUd,EACVe,IAAKpB,EACLe,UAAU,eAEZ,wBAAQA,UAAU,WAAlB,uB,OCaKM,MAhDf,YAAgE,IAAhDC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,WAAc,EACrC9B,mBAAS,CAC/Be,GAAI,KACJb,MAAO,KAHoD,mBACtDD,EADsD,KAChD8B,EADgD,KAc7D,OAAI9B,EAAKc,GACA,cAAC,EAAD,CAAUd,KAAMA,EAAMY,SATV,SAACX,GACpB2B,EAAW5B,EAAKc,GAAIb,GACpB6B,EAAQ,CACNhB,GAAI,KACJb,MAAO,QAST,qBAAKkB,UAAU,aAAf,SACGO,EAAMK,KAAI,SAACC,EAAMC,GAAP,OACT,sBAEEd,UAAWa,EAAKE,WAAa,oBAAsB,WAFrD,UAIE,sBAEEC,QAAS,kBAAMR,EAAaK,EAAKlB,KACjCK,UAAU,YAHZ,UAKE,+BAAOc,EAAQ,IACf,qBAAKd,UAAWa,EAAKE,WAAa,eAAiB,GAAnD,SACGF,EAAKd,SANHc,EAAKlB,IAUZ,sBAAKK,UAAU,QAAf,UACE,cAAC,IAAD,CACEgB,QAAS,kBAAML,EAAQ,CAAEhB,GAAIkB,EAAKlB,GAAIb,MAAO+B,EAAKd,UAEpD,cAAC,IAAD,CAAciB,QAAS,kBAAMN,EAAWG,EAAKlB,YAlB1CmB,SCgDAG,MAtEf,WAAqB,IAAD,EACQrC,mBAAS,IADjB,mBACX2B,EADW,KACJW,EADI,KAwDlB,OAjBA/B,qBAAU,WACR,GAAqC,OAAlCgC,aAAaC,QAAQ,SACtBD,aAAaE,QAAQ,QAAS,QAE3B,CACH,IAAMC,EAAmBC,KAAKC,MAAML,aAAaC,QAAQ,UACzDF,EAASI,MAEV,IAEHnC,qBAAU,WACRgC,aAAaE,QAAQ,QAASE,KAAKE,UAAUlB,MAC5C,CAACA,IAMF,qCACE,oBAAIP,UAAU,QAAd,yCACA,cAAC,EAAD,CAAUP,SAxDE,SAACoB,GACf,GAAKA,EAAKd,KAAV,CAIA,IAAM2B,EAAQ,sBAAOnB,GAAP,CAAcM,IAC5BK,EAASQ,OAmDP,cAAC,EAAD,CACEnB,MAAOA,EACPC,aAlDe,SAACb,GACpB,IAAIgC,EAAepB,EAAMK,KAAI,SAACC,GAK5B,OAJIA,EAAKlB,KAAOA,IACdkB,EAAKE,YAAcF,EAAKE,YAGnBF,KAGTK,EAASS,IA0CLjB,WAvCa,SAACf,GAClB,IAAM+B,EAAWnB,EAAMqB,QAAO,SAACf,GAAD,OAAUA,EAAKlB,KAAOA,KACpDuB,EAASQ,IAsCLjB,WAnCa,SAACd,EAAIkC,GACjBA,EAAS9B,MAIdmB,GAAS,SAACY,GAAD,OAAUA,EAAKlB,KAAI,SAACmB,GAAD,OAAWA,EAAKpC,KAAOA,EAAKkC,EAAWE,eCzBxDC,MARf,WACE,OACE,qBAAKhC,UAAU,MAAf,SACE,cAAC,EAAD,OCHNiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4682c680.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\n\r\nfunction TodoForm(props) {\r\n  const [input, setInput] = useState(props.edit ? props.edit.value : \"\");\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    props.onSubmit({\r\n      id: Math.floor(Math.random() * 10000),\r\n      text: input,\r\n    });\r\n\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"form\">\r\n      {!props.edit ? (\r\n        <>\r\n          <input\r\n            type=\"text\"\r\n            name=\"text\"\r\n            placeholder=\"Add a todo\"\r\n            value={input}\r\n            onChange={handleChange}\r\n            ref={inputRef}\r\n            className=\"form-input\"\r\n          ></input>\r\n          <button className=\"form-btn\">Add</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <input\r\n            type=\"text\"\r\n            name=\"text\"\r\n            placeholder=\"Update a todo\"\r\n            value={input}\r\n            onChange={handleChange}\r\n            ref={inputRef}\r\n            className=\"form-input\"\r\n          ></input>\r\n          <button className=\"form-btn\">Update</button>\r\n        </>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TodoForm;\r\n","import React, { useState } from \"react\";\r\nimport { AiFillEdit, AiFillDelete } from \"react-icons/ai\";\r\nimport TodoForm from \"./TodoForm\";\r\n\r\nfunction Todo({ todos, completeTodo, updateTodo, deleteTodo }) {\r\n  const [edit, setEdit] = useState({\r\n    id: null,\r\n    value: \"\",\r\n  });\r\n\r\n  const submitUpdate = (value) => {\r\n    updateTodo(edit.id, value);\r\n    setEdit({\r\n      id: null,\r\n      value: \"\",\r\n    });\r\n  };\r\n\r\n  if (edit.id) {\r\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"todo-table\">\r\n      {todos.map((todo, index) => (\r\n        <div\r\n          key={index}\r\n          className={todo.isComplete ? \"todo-row complete\" : \"todo-row\"}\r\n        >\r\n          <div\r\n            key={todo.id}\r\n            onClick={() => completeTodo(todo.id)}\r\n            className=\"todo-text\"\r\n          >\r\n            <span>{index + 1}</span>\r\n            <div className={todo.isComplete ? \"line-through\" : \"\"}>\r\n              {todo.text}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"icons\">\r\n            <AiFillEdit\r\n              onClick={() => setEdit({ id: todo.id, value: todo.text })}\r\n            />\r\n            <AiFillDelete onClick={() => deleteTodo(todo.id)} />\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport TodoForm from \"./TodoForm\";\r\nimport Todo from \"./Todo\";\r\n\r\nfunction TodoList() {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  const addTodo = (todo) => {\r\n    if (!todo.text) {\r\n      return;\r\n    }\r\n\r\n    const newTodos = [...todos, todo];\r\n    setTodos(newTodos);\r\n  };\r\n\r\n  const completeTodo = (id) => {\r\n    let updatedTodos = todos.map((todo) => {\r\n      if (todo.id === id) {\r\n        todo.isComplete = !todo.isComplete;\r\n      }\r\n\r\n      return todo;\r\n    });\r\n\r\n    setTodos(updatedTodos);\r\n  };\r\n\r\n  const deleteTodo = (id) => {\r\n    const newTodos = todos.filter((todo) => todo.id !== id);\r\n    setTodos(newTodos);\r\n  };\r\n\r\n  const updateTodo = (id, newValue) => {\r\n    if (!newValue.text) {\r\n      return;\r\n    }\r\n\r\n    setTodos((prev) => prev.map((item) => (item.id === id ? newValue : item)));\r\n  };\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    if(localStorage.getItem('todos') === null) {\r\n      localStorage.setItem('todos', []);\r\n    }\r\n    else {\r\n      const localStorageTodo = JSON.parse(localStorage.getItem('todos'));\r\n      setTodos(localStorageTodo);\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('todos', JSON.stringify(todos));\r\n  }, [todos])\r\n  \r\n\r\n  // console.log(todos);\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"title\">What is the Plan for today?</h1>\r\n      <TodoForm onSubmit={addTodo} />\r\n      <Todo\r\n        todos={todos}\r\n        completeTodo={completeTodo}\r\n        deleteTodo={deleteTodo}\r\n        updateTodo={updateTodo}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import \"./App.css\";\nimport React from \"react\";\nimport TodoList from \"./components/TodoList\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}